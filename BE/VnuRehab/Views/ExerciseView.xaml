<UserControl x:Class="VnuRehab.Views.ExerciseView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:VnuRehab.Views"
             xmlns:viewmodels="clr-namespace:VnuRehab.ViewModels"
             d:DataContext="{d:DesignInstance Type=viewmodels:ExerciseViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <CollectionViewSource Source="{Binding Exercises}" x:Key="GroupedData">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Group"/>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="250"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" Margin="0,0,10,0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="9"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="0"
                    CornerRadius="10"
                    Padding="10" Grid.RowSpan="2">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0.7">
                        <GradientStop Color="{StaticResource secondaryBackColor1}" Offset="0"/>
                        <GradientStop Color="{StaticResource secondaryBackColor2}" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Border CornerRadius="10">
                    <Border.Background>
                        <ImageBrush ImageSource="{Binding ImageSource}"
                                    Stretch="UniformToFill"/>
                    </Border.Background>
                    <TextBlock
    FontFamily="Montserrat"
    FontSize="14" 
    FontWeight="Medium"
    Foreground="{StaticResource color10}" 
    Margin="0,1,324,395"
    Text="{Binding TimeLeftText}"
    Visibility="{Binding IsTimerVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                </Border>
            </Border>
        </Grid>
        <Border Grid.Column="1" CornerRadius="10,10,10,10" Margin="10,0,0,0">
            <Border.Background>
                <LinearGradientBrush StartPoint="1,1" EndPoint="0,0">
                    <GradientStop Color="{StaticResource secondaryBackColor1}" Offset="0"/>
                    <GradientStop Color="{StaticResource secondaryBackColor2}" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
            <StackPanel>
                <TextBlock>
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="FontFamily" Value="Montserrat"/>
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="FontWeight" Value="Medium"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="Margin" Value="0,20,0,0"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsDeviceAvailable}" Value="True">
                                    <Setter Property="Text" Value="Device Available" />
                                    <Setter Property="Foreground" Value="{StaticResource color9}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsDeviceAvailable}" Value="False">
                                    <Setter Property="Text" Value="Device Unavailable" />
                                    <Setter Property="Foreground" Value="{StaticResource color10}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Stretch"
                            Margin="0,30">
                    <TextBlock Text="Toggle Device"
                               FontFamily="Montserrat"
                               FontSize="16" 
                               FontWeight="Regular"
                               Foreground="{StaticResource titleColor3}"
                               VerticalAlignment="Center"
                               Margin="20,0,30,0"/>
                    <ToggleButton Command="{Binding ToggleDeviceCommand}"
                                  IsChecked="{Binding IsDeviceOpen, Mode=OneWay}"
                                  IsEnabled="{Binding IsDeviceAvailable}"
                                  Style="{StaticResource SwitchToggleButton}"/>
                </StackPanel>
                <TextBlock Text="Choose an exercise"
                           FontFamily="Montserrat"
                           FontSize="20" 
                           FontWeight="Medium"
                           Foreground="{StaticResource titleColor3}"
                           VerticalAlignment="Center"
                           Margin="20,0"/>
                <ComboBox   Margin="20,10,20,0" 
  Padding="10,5,10,5"
          Background="{StaticResource panelColor}"
          ItemsSource="{Binding Source={StaticResource GroupedData}}" 
          SelectedItem="{Binding SelectedExercise}"
          Height="40">
                    <ComboBox.Resources>
                        <!-- Style for the items in the dropdown -->
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="Padding" Value="8,6"/>
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#8C6BFF"/>
                                    <Setter Property="Foreground" Value="#FFFFFF"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#6D2FFF"/>
                                    <Setter Property="Foreground" Value="#FFFFFF"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Resources>
                    <!-- Custom style with rounded corners -->
                    <ComboBox.Style>
                        <Style TargetType="ComboBox">
                            <Setter Property="Background" Value="{StaticResource panelColor}"/>
                            <Setter Property="BorderBrush" Value="#6D2FFF"/>
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="FontFamily" Value="Montserrat"/>
                            <Setter Property="FontWeight" Value="Regular"/>
                            <Setter Property="Foreground" Value="{StaticResource titleColor3}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ComboBox">
                                        <Grid>
                                            <Border x:Name="ComboContent"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                       BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="6">
                                                
                                                <ContentPresenter x:Name="ContentPresenter"
                                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                                  HorizontalAlignment="Left"
                                                                  VerticalAlignment="Center"
                                                                  Margin="10,0,25,0"
                                                                  RecognizesAccessKey="True" />
                                            </Border>
                                            <!-- ToggleButton to open the ComboBox -->
                                            <ToggleButton x:Name="ToggleButton"
                                                          Background="Transparent"
                                                          BorderThickness="0"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                          ClickMode="Press"
                                                          Focusable="False">
                                                <Path Data="M 0 0 L 8 8 L 16 0"
                                                      Stroke="#6D2FFF"
                                                      StrokeThickness="2"
                                                      StrokeLineJoin="Round"
                                                      StrokeEndLineCap="Round"
                                                      StrokeStartLineCap="Round"
                                                      Width="16"
                                                      Height="8"
                                                      HorizontalAlignment="Right"
                                                      VerticalAlignment="Center"
                                                      Margin="170,0,10,0" />
                                            </ToggleButton>

                                            <!-- Drop-down list (will show when the ToggleButton is checked) -->
                                            <Popup x:Name="DropDownPopup"
                                                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   Placement="Bottom"
                                                   Width="{Binding ActualWidth, ElementName=ComboContent}"
                                                   PopupAnimation="Scroll">
                                                <Border Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="1"
                                                        Padding="6 10"
                                                        CornerRadius="6">
                                                    <ScrollViewer>
                                                        <StackPanel>
                                                            <ItemsPresenter />
                                                        </StackPanel>
                                                    </ScrollViewer>
                                                </Border>
                                            </Popup>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="ComboContent" Property="Background" Value="{StaticResource panelOverColor}" />
                                                <Setter TargetName="ComboContent" Property="BorderBrush" Value="{StaticResource color2}" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="ComboContent" Property="Opacity" Value="0.5" />
                                            </Trigger>
                                            <Trigger Property="IsDropDownOpen" Value="True">
                                                <Setter TargetName="ComboContent" Property="Background" Value="{StaticResource panelActiveColor}" />
                                                <Setter TargetName="ComboContent" Property="BorderBrush" Value="{StaticResource color2}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ComboBox.Style>
                    <ComboBox.Template>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <Border Background="{StaticResource panelColor}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="0"
                                        x:Name="ComboContent">
                                    <ContentPresenter x:Name="ContentPresenter"
                                                        Content="{TemplateBinding SelectionBoxItem}"
                                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        Margin="10,0,25,0"
                                                        RecognizesAccessKey="True" />
                                </Border>
                                <!-- ToggleButton to open the ComboBox -->
                                <ToggleButton x:Name="ToggleButton"
                                              Background="Transparent"
                                              BorderThickness="0"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"
                                              Focusable="False">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border x:Name="border"
                                                    CornerRadius="10"
                                                    Background="Transparent"
                                                    BorderBrush="#6D2FFF"
                                                    BorderThickness="2">
                                                <Path x:Name="path"
                                                      Data="M 0 0 L 8 8 L 16 0"
                                                      Stroke="#6D2FFF"
                                                      StrokeThickness="2"
                                                      StrokeLineJoin="Round"
                                                      StrokeEndLineCap="Round"
                                                      StrokeStartLineCap="Round"
                                                      HorizontalAlignment="Right"
                                                      VerticalAlignment="Center"
                                                      Width="16" Height="8"
                                                      Margin="170,0,10,0" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="border" Property="BorderBrush" Value="#A077FF"/>
                                                    <Setter TargetName="path" Property="Stroke" Value="#A077FF"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <!-- Drop-down list (will show when the ToggleButton is checked) -->
                                <Popup x:Name="DropDownPopup"
                                       IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                       Placement="Bottom"
                                       Width="{Binding ActualWidth, ElementName=ComboContent}"
                                       PopupAnimation="Scroll">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            CornerRadius="10">
                                        <ScrollViewer Padding="5"
                                                      MaxHeight="300"
                                                      HorizontalScrollBarVisibility="Disabled"
                                                      VerticalScrollBarVisibility="Hidden">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </ComboBox.Template>
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" Foreground="{StaticResource titleColor3}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock FontWeight="Bold" Foreground="{StaticResource titleColor2}" Text="{Binding Name}" />
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ComboBox.GroupStyle>
                </ComboBox>
                <Button Command="{Binding ToggleExerciseCommand}"
        Width="199" Height="35"
        Margin="20"
        Cursor="Hand"
        HorizontalAlignment="Left">
                    <Button.Style>
                        <Style TargetType="Button">
                            <!-- Default style for "Start Exercise" button -->
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="BtnBorder"
                                Background="Transparent"
                                BorderBrush="{StaticResource color9}"
                                BorderThickness="2"
                                CornerRadius="6">
                                            <TextBlock x:Name="TextContent"
                                       Text="Start Exercise"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Foreground="{StaticResource titleColor3}"
                                       FontFamily="Montserrat"
                                       FontSize="16"
                                       FontWeight="Medium"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="BtnBorder" Property="BorderBrush" Value="#06B59C"/>
                                                <Setter TargetName="BtnBorder" Property="Background" Value="{StaticResource color9}"/>
                                                <Setter TargetName="TextContent" Property="Foreground" Value="#003D2E"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="BtnBorder" Property="BorderBrush" Value="#06B59C"/>
                                                <Setter TargetName="BtnBorder" Property="Background" Value="#06B59C"/>
                                                <Setter TargetName="TextContent" Property="Foreground" Value="#003D2E"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                            <!-- Style trigger for when exercise is running (Stop button) -->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsExerciseRunning}" Value="True">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="BtnBorder"
                                        Background="Transparent"
                                        BorderBrush="{StaticResource color10}"
                                        BorderThickness="2"
                                        CornerRadius="6">
                                                    <TextBlock x:Name="TextContent"
                                               Text="Stop Exercise"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Foreground="{StaticResource color10}"
                                               FontFamily="Montserrat"
                                               FontSize="16"
                                               FontWeight="Medium"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="BtnBorder" Property="BorderBrush" Value="#FF4D4D"/>
                                                        <Setter TargetName="BtnBorder" Property="Background" Value="{StaticResource color10}"/>
                                                        <Setter TargetName="TextContent" Property="Foreground" Value="#FFFFFF"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter TargetName="BtnBorder" Property="BorderBrush" Value="#FF4D4D"/>
                                                        <Setter TargetName="BtnBorder" Property="Background" Value="#FF4D4D"/>
                                                        <Setter TargetName="TextContent" Property="Foreground" Value="#FFFFFF"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <TextBlock
    FontFamily="Montserrat"
    FontSize="14" 
    FontWeight="Medium"
    Foreground="{StaticResource color6}" 
    Width="196">
    <Run Text="Chosen exercise: "/>
    <LineBreak/>
    <Run Text="{Binding SelectedExercise.Name, FallbackValue='You should choose an Exercise.'}"/>
                </TextBlock>
            </StackPanel>
        </Border>
        <TextBlock
    HorizontalAlignment="Right"
    FontFamily="Montserrat"
    FontSize="14" 
    FontWeight="Medium"
    Foreground="{StaticResource color3}" 
    Margin="0,580,606,11"
    Width="110"
    Visibility="{Binding IsScoreVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
    <Run Text="Points: "/>
    <Run Text="{Binding Score}"/>
        </TextBlock>
    </Grid>
</UserControl>